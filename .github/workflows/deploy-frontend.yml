name: Deploy Frontend

on:
  push:
    branches:
      - main

jobs:

  deploy-dev:
    runs-on: ubuntu-latest
    environment: DEV
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'

      - name: Install Dependencies
        run: npm install

      - name: Build for Development
        run: npm run build --configuration=development

      - name: Upload Dev Artifact
        uses: actions/upload-artifact@v2
        with:
          name: dev-artifact
          path: dist/FrontendProject/dev
      
      - name: Verify Build Artifacts
        run: ls -l dist/FrontendProject/dev

      - name: Download Dev Artifact
        uses: actions/download-artifact@v2
        with:
          name: dev-artifact
          path: dist/FrontendProject/dev

      - name: Deploy to Dev
        env:
          NETLIFY_SITE_NAME: ${{ secrets.NETLIFY_DEV_SITE_NAME }}
          NETLIFY_OWNER: ${{ secrets.NETLIFY_OWNER }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_DEV_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        run: | 
          npm install -g netlify-cli
          netlify login --auth $NETLIFY_AUTH_TOKEN
          netlify deploy --dir=dist/FrontendProject/dev

  deploy-staging:
    runs-on: ubuntu-latest
    environment: STAGING
    needs: deploy-dev
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'

      - name: Install Dependencies
        run: npm install

      - name: Build for Staging
        run: npm run build --configuration=staging

      - name: Delete Local Staging Branch if Exists
        run: |
          git branch -D staging || true
  
      - name: Delete Remote Staging Branch if Exists
        run: |
          git push origin --delete staging || true
  
      - name: Create Staging Branch from Main
        run: |
          git checkout -b staging origin/main

      - name: Deploy to Staging
        env:
          NETLIFY_SITE_NAME: ${{ secrets.NETLIFY_STAGING_SITE_NAME }}
          NETLIFY_OWNER: ${{ secrets.NETLIFY_OWNER }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_STAGING_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        run: |
          npm install -g netlify-cli
          netlify login --auth $NETLIFY_AUTH_TOKEN
          netlify deploy --dir=dist/FrontendProject/staging

  deploy-prod:
    runs-on: ubuntu-latest
    environment: PROD
    needs: deploy-staging
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'

      - name: Install Dependencies
        run: npm install

      - name: Build for Production
        run: npm run build --configuration=production

      - name: Delete Local prod Branch if Exists
        run: |
          git branch -D prod || true
  
      - name: Delete Remote prod Branch if Exists
        run: |
          git push origin --delete prod || true
  
      - name: Create prod Branch from Main
        run: |
          git checkout -b prod origin/main

      - name: Deploy to Prod/FrontendProject
        env:
          NETLIFY_SITE_NAME: ${{ secrets.NETLIFY_PROD_SITE_NAME }}
          NETLIFY_OWNER: ${{ secrets.NETLIFY_OWNER }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_PROD_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        run: |
          npm install -g netlify-cli
          netlify login --auth $NETLIFY_AUTH_TOKEN
          netlify deploy --dir=dist/FrontendProject/prod